{"ast":null,"code":"import React,{useState,useEffect}from'react';import bridge from'@vkontakte/vk-bridge';import{View,ScreenSpinner,AdaptivityProvider,AppRoot,ConfigProvider,SplitLayout,SplitCol}from'@vkontakte/vkui';import'@vkontakte/vkui/dist/vkui.css';import'@vkontakte/vkui';import{Input}from'@vkontakte/vkui';//bridge.send(\"VKWebAppInit\");\nimport Home from'./panels/Home';import Persik from'./panels/Persik';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";alert(bridge.send(\"VKWebAppInit\"));/*\nconst App = () => {\n\n\n\tbridge.send(\"VKWebAppInit\");\n\tbridge.send(\"VKWebAppGetClientVersion\");\n\n\tconst [scheme, setScheme] = useState('bright_light')\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tsetScheme(data.scheme)\n\t\t\t}\n\t\t});\n\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<ConfigProvider scheme={scheme}>\n\t\t\t<AdaptivityProvider>\n\t\t\t\t<AppRoot>\n\t\t\t\t\t<SplitLayout popout={popout}>\n\t\t\t\t\t\t<SplitCol>\n\t\t\t\t\t\t\t<View activePanel={activePanel}>\n\t\t\t\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t\t\t\t\t\t<Persik id='persik' go={go} />\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</SplitCol>\n\t\t\t\t\t</SplitLayout>\n\t\t\t\t</AppRoot>\n\t\t\t</AdaptivityProvider>\n\t\t</ConfigProvider>\n\t);\n}\n*/var textInput=/*#__PURE__*/React.createRef();var clear=function clear(){return textInput.current.value=\"\";};/*#__PURE__*/_jsx(View,{activePanel:\"input\",children:/*#__PURE__*/_jsxs(Panel,{id:\"input\",children:[/*#__PURE__*/_jsx(PanelHeader,{children:\"Input\"}),/*#__PURE__*/_jsxs(Group,{children:[/*#__PURE__*/_jsx(FormItem,{top:\"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\",children:/*#__PURE__*/_jsx(Input,{type:\"text\",defaultValue:\"\\u041F\\u0435\\u0442\\u0440\\u043E\\u0432\"})}),/*#__PURE__*/_jsx(FormItem,{children:/*#__PURE__*/_jsx(Input,{type:\"text\",defaultValue:\"\\u0418\\u0432\\u0430\\u043D\\u043E\\u0432\",align:\"center\"})}),/*#__PURE__*/_jsx(FormItem,{children:/*#__PURE__*/_jsx(Input,{type:\"text\",defaultValue:\"\\u0421\\u0438\\u0434\\u043E\\u0440\\u043E\\u0432\",align:\"right\"})}),/*#__PURE__*/_jsx(FormItem,{top:\"\\u0421 \\u0438\\u043A\\u043E\\u043D\\u043A\\u043E\\u0439\",children:/*#__PURE__*/_jsx(Input,{type:\"text\",defaultValue:\"\\u0421\\u043C\\u0438\\u0440\\u043D\\u043E\\u0432\",after:/*#__PURE__*/_jsx(Icon20User,{\"aria-hidden\":\"true\"})})}),/*#__PURE__*/_jsx(FormItem,{top:\"\\u0421 IconButton\",children:/*#__PURE__*/_jsx(Input,{getRef:textInput,type:\"text\",defaultValue:\"\\u041A\\u0443\\u0437\\u043D\\u0435\\u0446\\u043E\\u0432\",after:/*#__PURE__*/_jsx(IconButton,{hoverMode:\"opacity\",\"aria-label\":\"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C \\u043F\\u043E\\u043B\\u0435\",onClick:clear,children:/*#__PURE__*/_jsx(Icon16Clear,{})})})})]})]})});export default App;","map":{"version":3,"sources":["/home/mogloblina/vkk/src/App.js"],"names":["React","useState","useEffect","bridge","View","ScreenSpinner","AdaptivityProvider","AppRoot","ConfigProvider","SplitLayout","SplitCol","Input","Home","Persik","alert","send","textInput","createRef","clear","current","value","App"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,OAASC,IAAT,CAAeC,aAAf,CAA8BC,kBAA9B,CAAkDC,OAAlD,CAA2DC,cAA3D,CAA2EC,WAA3E,CAAwFC,QAAxF,KAAwG,iBAAxG,CACA,MAAO,+BAAP,CACA,MAAO,iBAAP,CACA,OAASC,KAAT,KAAsB,iBAAtB,CAEA;AAEA,MAAOC,CAAAA,IAAP,KAAiB,eAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,C,wFAGAC,KAAK,CAACX,MAAM,CAACY,IAAP,CAAY,cAAZ,CAAD,CAAL,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAEA,GAAMC,CAAAA,SAAS,cAAGhB,KAAK,CAACiB,SAAN,EAAlB,CACA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,SAAOF,CAAAA,SAAS,CAACG,OAAV,CAAkBC,KAAlB,CAA0B,EAAjC,EAAd,CAEA,kBAAC,IAAD,EAAM,WAAW,CAAC,OAAlB,uBACE,MAAC,KAAD,EAAO,EAAE,CAAC,OAAV,wBACE,KAAC,WAAD,oBADF,cAEE,MAAC,KAAD,yBACE,KAAC,QAAD,EAAU,GAAG,CAAC,4CAAd,uBACE,KAAC,KAAD,EAAO,IAAI,CAAC,MAAZ,CAAmB,YAAY,CAAC,sCAAhC,EADF,EADF,cAIE,KAAC,QAAD,wBACE,KAAC,KAAD,EAAO,IAAI,CAAC,MAAZ,CAAmB,YAAY,CAAC,sCAAhC,CAAyC,KAAK,CAAC,QAA/C,EADF,EAJF,cAOE,KAAC,QAAD,wBACE,KAAC,KAAD,EAAO,IAAI,CAAC,MAAZ,CAAmB,YAAY,CAAC,4CAAhC,CAA0C,KAAK,CAAC,OAAhD,EADF,EAPF,cAUE,KAAC,QAAD,EAAU,GAAG,CAAC,mDAAd,uBACE,KAAC,KAAD,EACE,IAAI,CAAC,MADP,CAEE,YAAY,CAAC,4CAFf,CAGE,KAAK,cAAE,KAAC,UAAD,EAAY,cAAY,MAAxB,EAHT,EADF,EAVF,cAiBE,KAAC,QAAD,EAAU,GAAG,CAAC,mBAAd,uBACE,KAAC,KAAD,EACE,MAAM,CAAEJ,SADV,CAEE,IAAI,CAAC,MAFP,CAGE,YAAY,CAAC,kDAHf,CAIE,KAAK,cACH,KAAC,UAAD,EACE,SAAS,CAAC,SADZ,CAEE,aAAW,2EAFb,CAGE,OAAO,CAAEE,KAHX,uBAKE,KAAC,WAAD,IALF,EALJ,EADF,EAjBF,GAFF,GADF,GAyCA,cAAeG,CAAAA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot, ConfigProvider, SplitLayout, SplitCol } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport '@vkontakte/vkui';\nimport { Input } from '@vkontakte/vkui';\n\n//bridge.send(\"VKWebAppInit\");\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\n\nalert(bridge.send(\"VKWebAppInit\"));\n/*\nconst App = () => {\n\n\n\tbridge.send(\"VKWebAppInit\");\n\tbridge.send(\"VKWebAppGetClientVersion\");\n\n\tconst [scheme, setScheme] = useState('bright_light')\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tsetScheme(data.scheme)\n\t\t\t}\n\t\t});\n\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<ConfigProvider scheme={scheme}>\n\t\t\t<AdaptivityProvider>\n\t\t\t\t<AppRoot>\n\t\t\t\t\t<SplitLayout popout={popout}>\n\t\t\t\t\t\t<SplitCol>\n\t\t\t\t\t\t\t<View activePanel={activePanel}>\n\t\t\t\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t\t\t\t\t\t<Persik id='persik' go={go} />\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</SplitCol>\n\t\t\t\t\t</SplitLayout>\n\t\t\t\t</AppRoot>\n\t\t\t</AdaptivityProvider>\n\t\t</ConfigProvider>\n\t);\n}\n*/\n\nconst textInput = React.createRef();\nconst clear = () => (textInput.current.value = \"\");\n\n<View activePanel=\"input\">\n  <Panel id=\"input\">\n    <PanelHeader>Input</PanelHeader>\n    <Group>\n      <FormItem top=\"Фамилия\">\n        <Input type=\"text\" defaultValue=\"Петров\" />\n      </FormItem>\n      <FormItem>\n        <Input type=\"text\" defaultValue=\"Иванов\" align=\"center\" />\n      </FormItem>\n      <FormItem>\n        <Input type=\"text\" defaultValue=\"Сидоров\" align=\"right\" />\n      </FormItem>\n      <FormItem top=\"С иконкой\">\n        <Input\n          type=\"text\"\n          defaultValue=\"Смирнов\"\n          after={<Icon20User aria-hidden=\"true\" />}\n        />\n      </FormItem>\n      <FormItem top=\"С IconButton\">\n        <Input\n          getRef={textInput}\n          type=\"text\"\n          defaultValue=\"Кузнецов\"\n          after={\n            <IconButton\n              hoverMode=\"opacity\"\n              aria-label=\"Очистить поле\"\n              onClick={clear}\n            >\n              <Icon16Clear />\n            </IconButton>\n          }\n        />\n      </FormItem>\n    </Group>\n  </Panel>\n</View>;\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}